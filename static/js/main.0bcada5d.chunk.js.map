{"version":3,"sources":["fonts/StarJedi.woff","fonts/StarJedi.woff2","fonts/StarJedi.ttf","StyledTheme.js","components/Sky/Sky.styled.js","components/Star/Star.styled.js","components/Star/Star.js","hooks/useStars.js","components/Sky/Sky.js","components/DeathStar/DeathStar.styled.js","components/DeathStar/DeathStar.js","components/Planets/PlanetA.styled.js","components/Planets/PlanetA.js","App.js","hooks/useSwapi.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","theme","fontFamily","darkColor","lightColor","orangeColor","GlobalStyle","createGlobalStyle","_templateObject","StarJedi_woff2","StarJedi_woff","StarJedi_ttf","StyledTheme","_ref","children","react_default","a","createElement","styled_components_browser_esm","Fragment","SkyContainer","styled","div","Sky_styled_templateObject","props","widthSize","heightSize","pulse","keyframes","Star_styled_templateObject","StarContainer","_templateObject2","topPosition","leftPosition","animationDelay","Star","defaultProps","identity","obj","numberToSeconds","number","concat","getRandomNumber","min","max","transformFn","Math","floor","random","Sky","starsCount","stars","count","leftRange","arguments","length","undefined","topRange","_leftRange","Object","slicedToArray","minLeft","maxLeft","_topRange","minTop","maxTop","useMemo","Array","fill","map","_","key","useStars","star","components_Star_Star","window","innerWidth","innerHeight","float","DeathStar_styled_templateObject","spin","DeathStar_styled_templateObject2","DeathStarContainer","_templateObject3","MovieContainer","_templateObject4","DeathStar","className","Title","_ref2","Label","_ref3","PlanetA_styled_templateObject","Container","PlanetA_styled_templateObject2","PlanetA","objectWithoutProperties","App","_useSwapi","_useState","useState","_useState2","loading","setLoading","_useState3","_useState4","planetCount","setPlanetCount","_useState5","films","_useState6","planet","setCurrentPlanet","fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","axios","ceil","then","result","stop","apply","this","getInitialPlanet","_callee2","_context2","sent","data","results","getNextPlanet","_callee3","_context3","useEffect","useSwapi","src_StyledTheme","components_Sky_Sky","components_DeathStar_DeathStar","name","population","climate","terrain","Planets_PlanetA","onClick","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bcada5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/StarJedi.972105bf.woff\";","module.exports = __webpack_public_path__ + \"static/media/StarJedi.a4eaedfe.woff2\";","module.exports = __webpack_public_path__ + \"static/media/StarJedi.cc3019aa.ttf\";","import React from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\n\nimport StarJedi_woff from './fonts/StarJedi.woff';\nimport StarJedi_woff2 from './fonts/StarJedi.woff2';\nimport StarJedi_ttf from './fonts/StarJedi.ttf';\n\nconst theme = {\n  fontFamily: 'Star Jedi',\n  darkColor: '#262626',\n  lightColor: '#efefed',\n  orangeColor: '#f6ae2d',\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Star Jedi';\n    src: url(${StarJedi_woff2}) format('woff2'),\n        url(${StarJedi_woff}) format('woff'),\n        url(${StarJedi_ttf}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  body {\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    margin: 0;\n  }\n\n  #root {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst StyledTheme = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <>\n      <GlobalStyle />\n      {children}\n    </>\n  </ThemeProvider>\n);\n\nexport default StyledTheme;\n","import styled from 'styled-components';\n\nexport const SkyContainer = styled.div`\n  position: fixed;\n  background: ${(props) => props.theme.darkColor};\n  width: ${(props) => props.widthSize + 'px'};\n  height: ${(props) => props.heightSize + 'px'};\n  overflow: hidden;\n`;\n","import styled, { keyframes } from 'styled-components';\n\nexport const pulse = keyframes`\n  0%    { transform: scale(1) }\n  50%   { transform: scale(0.8) }\n  100%  { transform: scale(1) }\n`;\n\nexport const StarContainer = styled.div`\n  width: 0;\n  height: 0;\n  border: 10px solid transparent;\n  border-bottom: 14px solid #f6ae2d;\n  position: absolute;\n  top: ${(props) => props.topPosition + 'px'};\n  left: ${(props) => props.leftPosition + 'px'};\n  animation: ${pulse} 2s linear infinite;\n  animation-delay: ${(props) => props.animationDelay};\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 0;\n    height: 0;\n    border: 10px solid transparent;\n    border-top: 14px solid #f6ae2d;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StarContainer } from './Star.styled';\n\nconst Star = (props) => <StarContainer {...props} />;\n\nStar.propTypes = {\n  animationDelay: PropTypes.oneOf(['0s', '1s', '2s']),\n  leftPosition: PropTypes.number,\n  topPosition: PropTypes.number,\n};\n\nStar.defaultProps = {\n  animationDelay: '0s',\n  leftPosition: 0,\n  topPosition: 0,\n};\n\nexport default Star;\n","import { useMemo } from 'react';\n\nconst identity = (obj) => obj;\nconst numberToSeconds = (number) => `${number}s`;\n\nconst getRandomNumber = (min, max, transformFn) => {\n  const position = Math.floor(Math.random() * (max - min)) + min;\n  return transformFn(position);\n};\n\nexport default function useStars(count, leftRange = [0, 0], topRange = [0, 0]) {\n  const [minLeft, maxLeft] = leftRange;\n  const [minTop, maxTop] = topRange;\n\n  const stars = useMemo(\n    () =>\n      Array(count)\n        .fill()\n        .map((_, key) => ({\n          key,\n          leftPosition: getRandomNumber(minLeft, maxLeft, identity),\n          topPosition: getRandomNumber(minTop, maxTop, identity),\n          animationDelay: getRandomNumber(0, 2, numberToSeconds),\n        })),\n    []\n  );\n\n  return stars;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SkyContainer } from './Sky.styled';\nimport Star from '../Star';\n\nimport useStars from '../../hooks/useStars';\n\nconst Sky = ({ starsCount, widthSize, heightSize }) => {\n  const stars = useStars(starsCount, [0, widthSize], [0, heightSize]);\n\n  return (\n    <SkyContainer widthSize={widthSize} heightSize={heightSize}>\n      {stars.map((star) => (\n        <Star {...star} />\n      ))}\n    </SkyContainer>\n  );\n};\n\nSky.propTypes = {\n  starsCount: PropTypes.number.isRequired,\n  widthSize: PropTypes.number,\n  heightSize: PropTypes.number,\n};\n\nSky.defaultProps = {\n  widthSize: window.innerWidth,\n  heightSize: window.innerHeight,\n};\n\nexport default Sky;\n","import styled, { keyframes } from 'styled-components';\n\nconst float = keyframes`\n  0%    { transform: translateY(0) }\n  50%   { transform: translateY(-20px) }\n  100%  { transform: translateY(0) }\n`;\n\nconst spin = keyframes`\n  0%    { transform: translateX(0) }\n  100%   { transform: translateX(900px) }\n`;\n\nexport const DeathStarContainer = styled.div`\n  background: #d9d9d9;\n  position: absolute;\n  width: 600px;\n  height: 600px;\n  border: 16px solid black;\n  border-radius: 50%;\n  overflow: hidden;\n  animation: ${float} 3s linear infinite;\n  transform-origin: 50% 50%;\n  font-weight: normal;\n  font-style: normal;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  font-family: ${(props) => props.theme.fontFamily};\n\n  &::before {\n    content: '';\n    background: #909090;\n    position: absolute;\n    width: 100%;\n    height: 350px;\n    top: 270px;\n  }\n\n  .trait {\n    background: black;\n    position: absolute;\n    top: 256px;\n    height: 16px;\n    width: 100%;\n  }\n\n  .circle {\n    background: #909090;\n    position: relative;\n    left: -120px;\n    top: 10%;\n    width: 120px;\n    height: 120px;\n    border: 8px solid black;\n    border-radius: 50%;\n    overflow: hidden;\n    animation: ${spin} 10s linear infinite;\n\n    &::after {\n      content: '';\n      background: #909090;\n      display: block;\n      border-radius: 50%;\n      border: 8px solid black;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      height: 20%;\n      width: 20%;\n    }\n\n    .line {\n      position: absolute;\n      height: 0;\n      width: 100%;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      border: 4px solid #686868;\n\n      &.line1 {\n        transform: rotate(45deg);\n      }\n\n      &.line2 {\n        transform: rotate(-45deg);\n      }\n\n      &.line3 {\n        transform: rotate(90deg);\n      }\n    }\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  padding-top: 6em;\n\n  h1 {\n    font-size: 48px;\n    margin-bottom: 0;\n  }\n\n  label {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\n\nimport { DeathStarContainer, MovieContainer } from './DeathStar.styled';\n\nconst DeathStar = ({ children }) => (\n  <DeathStarContainer>\n    <div className=\"circle\">\n      <div className=\"line line1\" />\n      <div className=\"line line2\" />\n      <div className=\"line line3\" />\n      <div className=\"line line4\" />\n    </div>\n    <div className=\"trait\" />\n    <MovieContainer>{children}</MovieContainer>\n  </DeathStarContainer>\n);\n\nDeathStar.Title = ({ children }) => <h1>{children}</h1>;\nDeathStar.Label = ({ children }) => <label>{children}</label>;\n\nexport default DeathStar;\n","import styled, { keyframes } from 'styled-components';\n\nconst float = keyframes`\n  0%    { transform: translateY(0) }\n  50%   { transform: translateY(10px) }\n  100%  { transform: translateY(0) }\n`;\n\nexport const Container = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  bottom: 30px;\n  right: 300px;\n  width: 120px;\n  height: 120px;\n  border: 12px solid black;\n  border-radius: 50%;\n  background: #0b7575;\n  animation: ${float} 3s linear infinite;\n  font-family: ${(props) => props.theme.fontFamily};\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 120px;\n    height: 120px;\n    top: -50px;\n    left: 20px;\n    background: rgba(67, 127, 127, 0.3);\n    border-radius: 50%;\n  }\n\n  label {\n    cursor: pointer;\n    font-size: 24px;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './PlanetA.styled';\n\nconst PlanetA = ({ children, ...props }) => <Container {...props}>{children}</Container>;\n\nPlanetA.Label = ({ children }) => <label>{children}</label>;\n\nexport default PlanetA;\n","import React from 'react';\n\nimport StyledTheme from './StyledTheme';\nimport Sky from './components/Sky';\nimport DeathStar from './components/DeathStar';\nimport { PlanetA } from './components/Planets';\n\nimport useSwapi from './hooks/useSwapi';\n\nconst App = () => {\n  const { planet, loading, getNextPlanet } = useSwapi();\n\n  return (\n    <StyledTheme>\n      <Sky starsCount={50} />\n      <DeathStar>\n        {loading ? (\n          <DeathStar.Title>Loading...</DeathStar.Title>\n        ) : (\n          <>\n            <DeathStar.Title>{planet.name}</DeathStar.Title>\n            <DeathStar.Label>Population: {planet.population}</DeathStar.Label>\n            <DeathStar.Label>Climate: {planet.climate}</DeathStar.Label>\n            <DeathStar.Label>Terrain: {planet.terrain}</DeathStar.Label>\n            <DeathStar.Label>Featured in {planet.films.length} movies</DeathStar.Label>\n          </>\n        )}\n      </DeathStar>\n      <PlanetA onClick={getNextPlanet}>\n        <PlanetA.Label>Next</PlanetA.Label>\n      </PlanetA>\n    </StyledTheme>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function() {\n  const [loading, setLoading] = useState(false);\n  const [planetCount, setPlanetCount] = useState(0);\n  const [planet, setCurrentPlanet] = useState({ films: [] });\n\n  const getRandomPlanet = () => Math.ceil(Math.random() * planetCount) || '';\n\n  const fetchData = async () => {\n    setLoading(true);\n    return axios(`https://swapi.co/api/planets/${getRandomPlanet()}`).then((result) => {\n      setLoading(false);\n      return result;\n    });\n  };\n\n  const getInitialPlanet = async () => {\n    const result = await fetchData();\n    setPlanetCount(result.data.count);\n    setCurrentPlanet(result.data.results[0]);\n  };\n\n  const getNextPlanet = async () => {\n    const result = await fetchData();\n    setCurrentPlanet(result.data);\n  };\n\n  useEffect(() => {\n    getInitialPlanet();\n  }, []);\n\n  return {\n    planet,\n    loading,\n    getNextPlanet,\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}